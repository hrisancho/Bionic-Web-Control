// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.6
// source: shared/shared.proto

package shared

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Finger int32

const (
	Finger_f1 Finger = 0 //большой палец
	Finger_f2 Finger = 1 //указательный палец
	Finger_f3 Finger = 2 //средний палец
	Finger_f4 Finger = 3 //безымянный палец
	Finger_f5 Finger = 4 //мизинец
)

// Enum value maps for Finger.
var (
	Finger_name = map[int32]string{
		0: "f1",
		1: "f2",
		2: "f3",
		3: "f4",
		4: "f5",
	}
	Finger_value = map[string]int32{
		"f1": 0,
		"f2": 1,
		"f3": 2,
		"f4": 3,
		"f5": 4,
	}
)

func (x Finger) Enum() *Finger {
	p := new(Finger)
	*p = x
	return p
}

func (x Finger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Finger) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_shared_proto_enumTypes[0].Descriptor()
}

func (Finger) Type() protoreflect.EnumType {
	return &file_shared_shared_proto_enumTypes[0]
}

func (x Finger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Finger.Descriptor instead.
func (Finger) EnumDescriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{0}
}

type ServoPosition int32

const (
	ServoPosition_d0 ServoPosition = 0 //приведения большого пальца
	ServoPosition_d1 ServoPosition = 1 //большой палец
	ServoPosition_d2 ServoPosition = 2 //указательный палец
	ServoPosition_d3 ServoPosition = 3 //средний палец
	ServoPosition_d4 ServoPosition = 4 //безымянный палец
	ServoPosition_d5 ServoPosition = 5 //мизинец
)

// Enum value maps for ServoPosition.
var (
	ServoPosition_name = map[int32]string{
		0: "d0",
		1: "d1",
		2: "d2",
		3: "d3",
		4: "d4",
		5: "d5",
	}
	ServoPosition_value = map[string]int32{
		"d0": 0,
		"d1": 1,
		"d2": 2,
		"d3": 3,
		"d4": 4,
		"d5": 5,
	}
)

func (x ServoPosition) Enum() *ServoPosition {
	p := new(ServoPosition)
	*p = x
	return p
}

func (x ServoPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServoPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_shared_proto_enumTypes[1].Descriptor()
}

func (ServoPosition) Type() protoreflect.EnumType {
	return &file_shared_shared_proto_enumTypes[1]
}

func (x ServoPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServoPosition.Descriptor instead.
func (ServoPosition) EnumDescriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{1}
}

// Перечисление возможных каналов для подключения к контроллеру за за ШИМ
type ChanelPWM int32

const (
	ChanelPWM_ch1 ChanelPWM = 0
	ChanelPWM_ch2 ChanelPWM = 1
	ChanelPWM_ch3 ChanelPWM = 2
	ChanelPWM_ch4 ChanelPWM = 3
	ChanelPWM_ch5 ChanelPWM = 4
	ChanelPWM_ch6 ChanelPWM = 5
	ChanelPWM_ch7 ChanelPWM = 6
	ChanelPWM_ch8 ChanelPWM = 7
)

// Enum value maps for ChanelPWM.
var (
	ChanelPWM_name = map[int32]string{
		0: "ch1",
		1: "ch2",
		2: "ch3",
		3: "ch4",
		4: "ch5",
		5: "ch6",
		6: "ch7",
		7: "ch8",
	}
	ChanelPWM_value = map[string]int32{
		"ch1": 0,
		"ch2": 1,
		"ch3": 2,
		"ch4": 3,
		"ch5": 4,
		"ch6": 5,
		"ch7": 6,
		"ch8": 7,
	}
)

func (x ChanelPWM) Enum() *ChanelPWM {
	p := new(ChanelPWM)
	*p = x
	return p
}

func (x ChanelPWM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChanelPWM) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_shared_proto_enumTypes[2].Descriptor()
}

func (ChanelPWM) Type() protoreflect.EnumType {
	return &file_shared_shared_proto_enumTypes[2]
}

func (x ChanelPWM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChanelPWM.Descriptor instead.
func (ChanelPWM) EnumDescriptor() ([]byte, []int) {
	return file_shared_shared_proto_rawDescGZIP(), []int{2}
}

var File_shared_shared_proto protoreflect.FileDescriptor

var file_shared_shared_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2a, 0x30, 0x0a,
	0x06, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x66, 0x31, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x66, 0x32, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x66, 0x33, 0x10, 0x02, 0x12,
	0x06, 0x0a, 0x02, 0x66, 0x34, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x66, 0x35, 0x10, 0x04, 0x2a,
	0x3f, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x06, 0x0a, 0x02, 0x64, 0x30, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x64, 0x31, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x64, 0x32, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x64, 0x33, 0x10, 0x03,
	0x12, 0x06, 0x0a, 0x02, 0x64, 0x34, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x64, 0x35, 0x10, 0x05,
	0x2a, 0x53, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x57, 0x4d, 0x12, 0x07, 0x0a,
	0x03, 0x63, 0x68, 0x31, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x68, 0x32, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x63, 0x68, 0x33, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x68, 0x34, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x68, 0x35, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x68,
	0x36, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x68, 0x37, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03,
	0x63, 0x68, 0x38, 0x10, 0x07, 0x42, 0x21, 0x5a, 0x1f, 0x42, 0x69, 0x6f, 0x6e, 0x69, 0x63, 0x2d,
	0x57, 0x65, 0x62, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_shared_proto_rawDescOnce sync.Once
	file_shared_shared_proto_rawDescData = file_shared_shared_proto_rawDesc
)

func file_shared_shared_proto_rawDescGZIP() []byte {
	file_shared_shared_proto_rawDescOnce.Do(func() {
		file_shared_shared_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_shared_proto_rawDescData)
	})
	return file_shared_shared_proto_rawDescData
}

var file_shared_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_shared_shared_proto_goTypes = []interface{}{
	(Finger)(0),        // 0: Shared.Finger
	(ServoPosition)(0), // 1: Shared.ServoPosition
	(ChanelPWM)(0),     // 2: Shared.ChanelPWM
}
var file_shared_shared_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shared_shared_proto_init() }
func file_shared_shared_proto_init() {
	if File_shared_shared_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_shared_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_shared_proto_goTypes,
		DependencyIndexes: file_shared_shared_proto_depIdxs,
		EnumInfos:         file_shared_shared_proto_enumTypes,
	}.Build()
	File_shared_shared_proto = out.File
	file_shared_shared_proto_rawDesc = nil
	file_shared_shared_proto_goTypes = nil
	file_shared_shared_proto_depIdxs = nil
}
