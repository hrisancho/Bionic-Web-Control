// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.6
// source: servo/servo.proto

package servo

import (
	shared "Bionic-Web-Control/proto/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Servo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo         shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"` //позиция сервопривода
	Angle         float32              `protobuf:"fixed32,2,opt,name=angle,proto3" json:"angle,omitempty"`                          //угол, заданный программно
	Duty          uint32               `protobuf:"varint,4,opt,name=duty,proto3" json:"duty,omitempty"`                             //сырые данные, из которых выводится угол
	Lock          bool                 `protobuf:"varint,3,opt,name=lock,proto3" json:"lock,omitempty"`                             //включен ли режим удержания угла
	Move          bool                 `protobuf:"varint,5,opt,name=move,proto3" json:"move,omitempty"`                             //находится ли сейчас сервопривод в постепенном движении
	ChPWD         shared.ChanelPWM     `protobuf:"varint,6,opt,name=chPWD,proto3,enum=Shared.ChanelPWM" json:"chPWD,omitempty"`     // Используемый канал для подключению к ШИМ контроллеру(или типа того)
	ConnectionPin string               `protobuf:"bytes,7,opt,name=connectionPin,proto3" json:"connectionPin,omitempty"`            // Пин (порт на плате) к которому будет крепиться сервопривод
}

func (x *Servo) Reset() {
	*x = Servo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servo_servo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Servo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Servo) ProtoMessage() {}

func (x *Servo) ProtoReflect() protoreflect.Message {
	mi := &file_servo_servo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Servo.ProtoReflect.Descriptor instead.
func (*Servo) Descriptor() ([]byte, []int) {
	return file_servo_servo_proto_rawDescGZIP(), []int{0}
}

func (x *Servo) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

func (x *Servo) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *Servo) GetDuty() uint32 {
	if x != nil {
		return x.Duty
	}
	return 0
}

func (x *Servo) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *Servo) GetMove() bool {
	if x != nil {
		return x.Move
	}
	return false
}

func (x *Servo) GetChPWD() shared.ChanelPWM {
	if x != nil {
		return x.ChPWD
	}
	return shared.ChanelPWM(0)
}

func (x *Servo) GetConnectionPin() string {
	if x != nil {
		return x.ConnectionPin
	}
	return ""
}

var File_servo_servo_proto protoreflect.FileDescriptor

var file_servo_servo_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd5, 0x01, 0x0a, 0x05, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65, 0x72,
	0x76, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x75, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x75, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x68, 0x50, 0x57,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x57, 0x4d, 0x52, 0x05, 0x63, 0x68, 0x50, 0x57,
	0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x42, 0x20, 0x5a, 0x1e, 0x42, 0x69, 0x6f, 0x6e, 0x69,
	0x63, 0x2d, 0x57, 0x65, 0x62, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_servo_servo_proto_rawDescOnce sync.Once
	file_servo_servo_proto_rawDescData = file_servo_servo_proto_rawDesc
)

func file_servo_servo_proto_rawDescGZIP() []byte {
	file_servo_servo_proto_rawDescOnce.Do(func() {
		file_servo_servo_proto_rawDescData = protoimpl.X.CompressGZIP(file_servo_servo_proto_rawDescData)
	})
	return file_servo_servo_proto_rawDescData
}

var file_servo_servo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_servo_servo_proto_goTypes = []interface{}{
	(*Servo)(nil),             // 0: Servo.Servo
	(shared.ServoPosition)(0), // 1: Shared.ServoPosition
	(shared.ChanelPWM)(0),     // 2: Shared.ChanelPWM
}
var file_servo_servo_proto_depIdxs = []int32{
	1, // 0: Servo.Servo.servo:type_name -> Shared.ServoPosition
	2, // 1: Servo.Servo.chPWD:type_name -> Shared.ChanelPWM
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_servo_servo_proto_init() }
func file_servo_servo_proto_init() {
	if File_servo_servo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servo_servo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Servo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servo_servo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_servo_servo_proto_goTypes,
		DependencyIndexes: file_servo_servo_proto_depIdxs,
		MessageInfos:      file_servo_servo_proto_msgTypes,
	}.Build()
	File_servo_servo_proto = out.File
	file_servo_servo_proto_rawDesc = nil
	file_servo_servo_proto_goTypes = nil
	file_servo_servo_proto_depIdxs = nil
}
