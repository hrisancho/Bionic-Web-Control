// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.6
// source: commands/commands.proto

package commands

import (
	shared "Bionic-Web-Control/proto/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// функция, задающая скорость движения от времениы
type Easings int32

const (
	Easings_linear Easings = 0
)

// Enum value maps for Easings.
var (
	Easings_name = map[int32]string{
		0: "linear",
	}
	Easings_value = map[string]int32{
		"linear": 0,
	}
)

func (x Easings) Enum() *Easings {
	p := new(Easings)
	*p = x
	return p
}

func (x Easings) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Easings) Descriptor() protoreflect.EnumDescriptor {
	return file_commands_commands_proto_enumTypes[0].Descriptor()
}

func (Easings) Type() protoreflect.EnumType {
	return &file_commands_commands_proto_enumTypes[0]
}

func (x Easings) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Easings.Descriptor instead.
func (Easings) EnumDescriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{0}
}

// жесты
type Gestures int32

const (
	Gestures_neutral  Gestures = 0 //Прямая ладоно
	Gestures_grip     Gestures = 1
	Gestures_boatGrip Gestures = 2 //захват без сгибания большого пальца, но с его приведением
	Gestures_like     Gestures = 3
	Gestures_victoria Gestures = 4
	Gestures_inTouch  Gestures = 5 //на связи
)

// Enum value maps for Gestures.
var (
	Gestures_name = map[int32]string{
		0: "neutral",
		1: "grip",
		2: "boatGrip",
		3: "like",
		4: "victoria",
		5: "inTouch",
	}
	Gestures_value = map[string]int32{
		"neutral":  0,
		"grip":     1,
		"boatGrip": 2,
		"like":     3,
		"victoria": 4,
		"inTouch":  5,
	}
)

func (x Gestures) Enum() *Gestures {
	p := new(Gestures)
	*p = x
	return p
}

func (x Gestures) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gestures) Descriptor() protoreflect.EnumDescriptor {
	return file_commands_commands_proto_enumTypes[1].Descriptor()
}

func (Gestures) Type() protoreflect.EnumType {
	return &file_commands_commands_proto_enumTypes[1]
}

func (x Gestures) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gestures.Descriptor instead.
func (Gestures) EnumDescriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{1}
}

// Прокрутить сервопривод до заданного в радианах угла
type ServoGoToAngle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"`
	Angle float32              `protobuf:"fixed32,2,opt,name=angle,proto3" json:"angle,omitempty"`
}

func (x *ServoGoToAngle) Reset() {
	*x = ServoGoToAngle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServoGoToAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServoGoToAngle) ProtoMessage() {}

func (x *ServoGoToAngle) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServoGoToAngle.ProtoReflect.Descriptor instead.
func (*ServoGoToAngle) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{0}
}

func (x *ServoGoToAngle) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

func (x *ServoGoToAngle) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

// Стремиться сдерживать сервопривод текущую позицию
type ServoLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"`
}

func (x *ServoLock) Reset() {
	*x = ServoLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServoLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServoLock) ProtoMessage() {}

func (x *ServoLock) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServoLock.ProtoReflect.Descriptor instead.
func (*ServoLock) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{1}
}

func (x *ServoLock) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

// Остановить удержание позиции
type ServoUnLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"`
}

func (x *ServoUnLock) Reset() {
	*x = ServoUnLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServoUnLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServoUnLock) ProtoMessage() {}

func (x *ServoUnLock) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServoUnLock.ProtoReflect.Descriptor instead.
func (*ServoUnLock) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{2}
}

func (x *ServoUnLock) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

// Постепенное движение сервоприводом
type ServoSmoothlyMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo       shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"`
	Easing      Easings              `protobuf:"varint,2,opt,name=easing,proto3,enum=Commands.Easings" json:"easing,omitempty"` //функция, задающая скорость движения от времени
	Speed       float32              `protobuf:"fixed32,3,opt,name=speed,proto3" json:"speed,omitempty"`                        //средняя путевая скорость
	TargetAngle float32              `protobuf:"fixed32,4,opt,name=targetAngle,proto3" json:"targetAngle,omitempty"`            //целевой угол
}

func (x *ServoSmoothlyMove) Reset() {
	*x = ServoSmoothlyMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServoSmoothlyMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServoSmoothlyMove) ProtoMessage() {}

func (x *ServoSmoothlyMove) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServoSmoothlyMove.ProtoReflect.Descriptor instead.
func (*ServoSmoothlyMove) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{3}
}

func (x *ServoSmoothlyMove) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

func (x *ServoSmoothlyMove) GetEasing() Easings {
	if x != nil {
		return x.Easing
	}
	return Easings_linear
}

func (x *ServoSmoothlyMove) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ServoSmoothlyMove) GetTargetAngle() float32 {
	if x != nil {
		return x.TargetAngle
	}
	return 0
}

// Приводить сервопривод до максимума либо до достижения уровня давления в подушечке пальца
type MoveToTargetPressure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servo  shared.ServoPosition `protobuf:"varint,1,opt,name=servo,proto3,enum=Shared.ServoPosition" json:"servo,omitempty"`
	Finger shared.Finger        `protobuf:"varint,2,opt,name=finger,proto3,enum=Shared.Finger" json:"finger,omitempty"`
}

func (x *MoveToTargetPressure) Reset() {
	*x = MoveToTargetPressure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveToTargetPressure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveToTargetPressure) ProtoMessage() {}

func (x *MoveToTargetPressure) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveToTargetPressure.ProtoReflect.Descriptor instead.
func (*MoveToTargetPressure) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{4}
}

func (x *MoveToTargetPressure) GetServo() shared.ServoPosition {
	if x != nil {
		return x.Servo
	}
	return shared.ServoPosition(0)
}

func (x *MoveToTargetPressure) GetFinger() shared.Finger {
	if x != nil {
		return x.Finger
	}
	return shared.Finger(0)
}

type HoldGesture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gesture   Gestures `protobuf:"varint,1,opt,name=gesture,proto3,enum=Commands.Gestures" json:"gesture,omitempty"`
	Duration  uint32   `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`   //длительность удержания в секундах
	Permanent bool     `protobuf:"varint,3,opt,name=permanent,proto3" json:"permanent,omitempty"` //нужно ли удерживать пока не поступит другая команда
}

func (x *HoldGesture) Reset() {
	*x = HoldGesture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commands_commands_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldGesture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldGesture) ProtoMessage() {}

func (x *HoldGesture) ProtoReflect() protoreflect.Message {
	mi := &file_commands_commands_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldGesture.ProtoReflect.Descriptor instead.
func (*HoldGesture) Descriptor() ([]byte, []int) {
	return file_commands_commands_proto_rawDescGZIP(), []int{5}
}

func (x *HoldGesture) GetGesture() Gestures {
	if x != nil {
		return x.Gesture
	}
	return Gestures_neutral
}

func (x *HoldGesture) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *HoldGesture) GetPermanent() bool {
	if x != nil {
		return x.Permanent
	}
	return false
}

var File_commands_commands_proto protoreflect.FileDescriptor

var file_commands_commands_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x47, 0x6f, 0x54, 0x6f, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x38, 0x0a,
	0x09, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x22, 0x3a, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x6f,
	0x55, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x53, 0x6d, 0x6f,
	0x6f, 0x74, 0x68, 0x6c, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65, 0x72,
	0x76, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x61, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x45, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x06, 0x65, 0x61, 0x73, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x4d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x12, 0x26,
	0x0a, 0x06, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x0b, 0x48, 0x6f, 0x6c, 0x64, 0x47, 0x65,
	0x73, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x07, 0x67, 0x65, 0x73, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x2a, 0x15, 0x0a,
	0x07, 0x45, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65,
	0x61, 0x72, 0x10, 0x00, 0x2a, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x67, 0x72, 0x69, 0x70, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x74, 0x47,
	0x72, 0x69, 0x70, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x69, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x10, 0x05, 0x42, 0x23, 0x5a, 0x21, 0x42, 0x69,
	0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x57, 0x65, 0x62, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commands_commands_proto_rawDescOnce sync.Once
	file_commands_commands_proto_rawDescData = file_commands_commands_proto_rawDesc
)

func file_commands_commands_proto_rawDescGZIP() []byte {
	file_commands_commands_proto_rawDescOnce.Do(func() {
		file_commands_commands_proto_rawDescData = protoimpl.X.CompressGZIP(file_commands_commands_proto_rawDescData)
	})
	return file_commands_commands_proto_rawDescData
}

var file_commands_commands_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_commands_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_commands_commands_proto_goTypes = []interface{}{
	(Easings)(0),                 // 0: Commands.Easings
	(Gestures)(0),                // 1: Commands.Gestures
	(*ServoGoToAngle)(nil),       // 2: Commands.ServoGoToAngle
	(*ServoLock)(nil),            // 3: Commands.ServoLock
	(*ServoUnLock)(nil),          // 4: Commands.ServoUnLock
	(*ServoSmoothlyMove)(nil),    // 5: Commands.ServoSmoothlyMove
	(*MoveToTargetPressure)(nil), // 6: Commands.MoveToTargetPressure
	(*HoldGesture)(nil),          // 7: Commands.HoldGesture
	(shared.ServoPosition)(0),    // 8: Shared.ServoPosition
	(shared.Finger)(0),           // 9: Shared.Finger
}
var file_commands_commands_proto_depIdxs = []int32{
	8, // 0: Commands.ServoGoToAngle.servo:type_name -> Shared.ServoPosition
	8, // 1: Commands.ServoLock.servo:type_name -> Shared.ServoPosition
	8, // 2: Commands.ServoUnLock.servo:type_name -> Shared.ServoPosition
	8, // 3: Commands.ServoSmoothlyMove.servo:type_name -> Shared.ServoPosition
	0, // 4: Commands.ServoSmoothlyMove.easing:type_name -> Commands.Easings
	8, // 5: Commands.MoveToTargetPressure.servo:type_name -> Shared.ServoPosition
	9, // 6: Commands.MoveToTargetPressure.finger:type_name -> Shared.Finger
	1, // 7: Commands.HoldGesture.gesture:type_name -> Commands.Gestures
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_commands_commands_proto_init() }
func file_commands_commands_proto_init() {
	if File_commands_commands_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commands_commands_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServoGoToAngle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commands_commands_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServoLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commands_commands_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServoUnLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commands_commands_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServoSmoothlyMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commands_commands_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveToTargetPressure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commands_commands_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HoldGesture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commands_commands_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_commands_commands_proto_goTypes,
		DependencyIndexes: file_commands_commands_proto_depIdxs,
		EnumInfos:         file_commands_commands_proto_enumTypes,
		MessageInfos:      file_commands_commands_proto_msgTypes,
	}.Build()
	File_commands_commands_proto = out.File
	file_commands_commands_proto_rawDesc = nil
	file_commands_commands_proto_goTypes = nil
	file_commands_commands_proto_depIdxs = nil
}
